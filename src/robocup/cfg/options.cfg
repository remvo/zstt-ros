#!/usr/bin/env python

PACKAGE = "robocup"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# name type level desc default min max


# HoughCircles parameter : dp, minDist, param1, param2, minRadius, maxRadius
circle = gen.add_group("circle")

# Inverse ratio of the accumulator resolution to the image resolution
circle.add("dp", int_t, 0, "", 1, 0, 50)

# Minimun distance between the centers of the detected circles
circle.add("min_distance", int_t, 0, "", 20, 0, 200)

# First method-specific parameter
circle.add("param1", int_t, 0, "", 20, 0, 200)

# Second method-specific parameter
circle.add("param2", int_t, 0, "", 50, 0, 200)

# Minimum circle radius
circle.add("min_radius", int_t, 0, "", 10, 0, 200)

# Maximum circle radius
circle.add("max_radius", int_t, 0, "", 50, 0, 200)


# Image 
image = gen.add_group("image")

# GaussianBlur Amount
image.add("blur", int_t, 0, "", 5, 0, 50)

# Minimun size of Contour area
image.add("min_contour", int_t, 0, "", 100, 0, 1000)

field = image.add_group("field")

# Minimum size of Field area
field.add("min_field", int_t, 0, "", 100, 0, 1000)

# Distance when merge Field area
field.add("merge_field", int_t, 0, "", 250, 0, 1000)

ball = image.add_group("field")

# Minimum radius of Ball
ball.add("min_ball_radius", int_t, 0, "", 50, 0, 1000)

# Maximum radius of Ball
ball.add("max_ball_radius", int_t, 0, "", 200, 0, 1000)

goal = image.add_group("goal")

# Minimum size of Goal area
goal.add("min_goal", int_t, 0, "", 100, 0, 5000)

# Minimum size of Goal area
goal.add("max_goal", int_t, 0, "", 10000, 0, 20000)

# Maximum distance between field edge and goalpost candidate
goal.add("thres_goal_distance", int_t, 0, "", 50, 0, 500)

# Threshold to determine three points are on the same line.
goal.add("thres_goal_angle", int_t, 0, "", 30, 0, 200)

exit(gen.generate(PACKAGE, "robocup", "option")) 
